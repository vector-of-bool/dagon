[tool.poetry]
name = "dagon"
version = "0.9.3"
description = "An asynchronous task graph execution system"
authors = ["vector-of-bool <vectorofbool@gmail.com>"]
packages = [
    { include = "dagon" },
]
readme = "README.md"
repository = "https://github.com/vector-of-bool/dagon"

[tool.poetry.dependencies]
python = "^3.7"
typing-extensions = "^4.0.1"
importlib-metadata = { "version" = "*", python = "<3.10" }

[tool.poetry.scripts]
dagon = "dagon.tool.main:start"
dagon-inspect = "dagon.inspect.main:start"

[tool.poetry.dev-dependencies]
yapf = "^0.31.0"
pyright = "^0.0.13"
pylint = "^2.12.2"
pytest = "^6.2.5"
tox = "^3.24.4"
Sphinx = "^4.3.1"
sphinx-autodoc-typehints = "^1.12.0"
pytest-asyncio = "^0.16.0"
pytest-xdist = "^2.5.0"
litecli = "^1.6.0"
graphviz = "^0.19.1"

[tool.pyright]
include = ["dagon/"]
strict = ["**"]
typeshed-path = "typings"

[tool.poetry.plugins."dagon.extensions"]
"dagon.events" = "dagon.event:_EventsExt"
"dagon.options" = "dagon.option.ext:_OptionsExt"
"dagon.pools" = "dagon.pool:_PoolsExt"
"dagon.db" = "dagon.db:_DatabaseExt"
"dagon.persist" = "dagon.persist:_PersistExt"
"dagon.ui" = "dagon.ui:_Ext"

[tool.poetry.plugins."dagon.uis"]
"dagon.ui.simple" = "dagon.ui.simple:SimpleUI"
"dagon.ui.fancy" = "dagon.ui.fancy:FancyUI"

[tool.pytest.ini_options]
filterwarnings = [
    "error"
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
